*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


.container {
    margin: 10% 10%;
}

.flex-item {
    width: 30px;
    height: 30px;
    background-color: red;
    text-align: center;
    line-height: 30px;
}

.flex-body {
    display: flex; /*Элемент ведёт себя как блочный и выкладывает содержимое согласно флекс-модели.*/
    display: inline-flex; /*Элемент ведёт себя как строчный и выкладывает содержимое согласно флекс-модели. */
}

.flex-body {
    /*Свойство flex-direction задаёт направление основных осей в контейнере и тем самым определяет положение флексов в контейнере. На само направление также влияет значение атрибута dir у контейнера.*/

    flex-direction: row ; /*Главная ось направлена так же, как и ориентация текста, по умолчанию слева направо. Если значение dir задано как rtl, то направление оси идёт справа налево.*/
    flex-direction: row-reverse; /*Похоже на значение row, но меняются местами начальная и конечная точки и главная ось направлена справа налево. Если значение dir задано как rtl, то направление оси идёт слева направо.*/
    flex-direction: column ; /*Главная ось располагается вертикально и направлена сверху вниз.*/
    flex-direction: column-reverse ; /*Главная ось располагается вертикально, но меняется положение начальной и конечной точек и ось направлена снизу вверх.*/
}

.flex-body {
    /* Свойство flex-wrap Указывает, следует ли флексам располагаться в одну строку или можно занять несколько строк. Если перенос строк допускается, то свойство также позволяет контролировать направление, в котором выкладываются строки. */
     flex-wrap: nowrap; /*Флексы выстраиваются в одну линию. */
     flex-wrap: wrap; /*Флексы выстраиваются в несколько строк, их направление задаётся свойством flex-direction. */
     flex-wrap: wrap-reverse; /*Флексы выстраиваются в несколько строк, в направлении, противоположном flex-direction. */
}

.flex-body {
    /* Cвойство flex-flow является сокращённым свойством для отдельных свойств flex-direction и flex-wrap. */
    flex-flow: row nowrap;
    flex-flow: column-reverse;
    flex-flow: column nowrap;
    flex-flow: row-reverse wrap-reverse;
}

.flex-body {
    /* Свойство justify-content определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. Это делается после того, как применяются размеры и автоматические отступы, за исключением ситуации, когда по крайней мере у одного элемента flex-grow больше нуля. При этом не остаётся никакого свободного пространства для манипулирования. */
     justify-content: space-around; /*Флексы равномерно распределяются по всей строке. Пустое пространство перед первым и после последнего элементов равно половине пространства между двумя соседними элементами. */
    justify-content: space-between; /* Флексы равномерно распределяются по всей строке. Первый и последний элемент прижимаются к соответствующим краям контейнера. */
     justify-content: space-evenly; /*Флексы распределяются так, что расстояние между любыми двумя соседними элементами, а также перед первым и после последнего, было одинаковым. */
     justify-content: center; /*Флексы выравниваются по центру строки. */
     justify-content: flex-end; /*Флексы прижаты к концу строки. */
     justify-content: flex-start; /*Флексы прижаты к началу строки. */
}

.flex-body {
    /* Cвойство align-items выравнивает флекс-элементы внутри контейнера в перпендикулярном направлении. */
    align-items: flex-start;  /*Флексы выравниваются в начале поперечной оси контейнера. */
     align-items: flex-end; /*Флексы выравниваются в конце поперечной оси контейнера. */
     align-items: center; /*Флексы выравниваются по линии поперечной оси. */
     align-items: baseline; /*Флексы выравниваются по их базовой линии. */
     align-items: stretch; /*Флексы растягиваются таким образом, чтобы занять всё доступное пространство контейнера. */
}